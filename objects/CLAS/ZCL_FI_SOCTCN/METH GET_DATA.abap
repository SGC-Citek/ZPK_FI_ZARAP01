  METHOD GET_DATA.

    SELECT DISTINCT
    ACCOUNTPROFILE~ACCOUNT  AS CUS_SUP,
    ITEM~FINANCIALACCOUNTTYPE,
    JOURNAL~ACCOUNTINGDOCUMENT,
    JOURNAL~COMPANYCODE,
    JOURNAL~FISCALYEAR,
    ITEM~LEDGERGLLINEITEM,
    JOURNAL~POSTINGDATE,
    JOURNAL~FISCALPERIOD,
    ITEM~GLACCOUNT,
    I_GLACCOUNTTEXT~GLACCOUNTLONGNAME,
*    item~offsettingaccount  AS tk_doi_ung,
*    accountprofile~account  AS cus_sup,
    ITEM~TRANSACTIONCURRENCY,
    ITEM~COMPANYCODECURRENCY,

*    accountprofile~accountnname  AS accounttypename,
    CASE WHEN CUSNAME~CUSTOMER IS NOT INITIAL
         THEN CUSNAME~CUSTOMERFULLNAME
         WHEN SUPNAME~SUPPLIER IS NOT INITIAL
         THEN SUPNAME~SUPPLIERFULLNAME
    END AS ACCOUNTTYPENAME,

    JOURNAL~ACCOUNTINGDOCUMENTCREATIONDATE,
    JOURNAL~DOCUMENTREFERENCEID,

    CASE WHEN ITEM~DOCUMENTITEMTEXT <>  ' '
         THEN ITEM~DOCUMENTITEMTEXT
         WHEN ITEM~DOCUMENTITEMTEXT = ' '
         THEN JOURNAL~ACCOUNTINGDOCUMENTHEADERTEXT
         ELSE ' '
    END                                          AS DIEN_GIAI,

    CASE WHEN ITEM~TRANSACTIONCURRENCY <> ITEM~COMPANYCODECURRENCY
*          AND item~amountintransactioncurrency > 0
          AND ITEM~DEBITCREDITCODE = 'S'
         THEN ITEM~AMOUNTINTRANSACTIONCURRENCY
         ELSE 0
    END AS AMOUNT_FOREIGN_NO,

    CASE WHEN ITEM~TRANSACTIONCURRENCY <> ITEM~COMPANYCODECURRENCY
*          AND item~amountintransactioncurrency < 0
          AND ITEM~DEBITCREDITCODE = 'H'
         THEN ITEM~AMOUNTINTRANSACTIONCURRENCY
         ELSE 0
    END AS AMOUNT_FOREIGN_CO,

*    CASE WHEN item~amountincompanycodecurrency > 0
    CASE WHEN ITEM~DEBITCREDITCODE = 'S'
         THEN ITEM~AMOUNTINCOMPANYCODECURRENCY
    END  AS AMOUNT_LOCAL_NO,

*    CASE WHEN item~amountincompanycodecurrency < 0
    CASE WHEN ITEM~DEBITCREDITCODE = 'H'
         THEN ITEM~AMOUNTINCOMPANYCODECURRENCY
    END  AS AMOUNT_LOCAL_CO,
*    ' '  AS ti_gia,
    CASE WHEN ITEM~TRANSACTIONCURRENCY <> ITEM~COMPANYCODECURRENCY
         THEN JOURNAL~ABSOLUTEEXCHANGERATE
         END  AS TI_GIA,
    JOURNAL~ACCOUNTINGDOCUMENTTYPE,
*    item~financialaccounttype,
    ITEM~DEBITCREDITCODE,
    OADI~ISNEGATIVEPOSTING,
    'X' AS ISEXISTINPERIOD

    FROM  I_JOURNALENTRY AS JOURNAL
    INNER JOIN I_JOURNALENTRYITEM AS ITEM
            ON ITEM~ACCOUNTINGDOCUMENT = JOURNAL~ACCOUNTINGDOCUMENT
           AND ITEM~COMPANYCODE        = JOURNAL~COMPANYCODE
           AND ITEM~FISCALYEAR         = JOURNAL~FISCALYEAR
    INNER JOIN ZCORE_I_PROFILE_FIDOC AS ACCOUNTPROFILE
            ON ACCOUNTPROFILE~ACCOUNTINGDOCUMENT     = ITEM~ACCOUNTINGDOCUMENT
           AND ACCOUNTPROFILE~ACCOUNTINGDOCUMENTITEM = ITEM~ACCOUNTINGDOCUMENTITEM
           AND ACCOUNTPROFILE~COMPANYCODE            = ITEM~COMPANYCODE
           AND ACCOUNTPROFILE~FISCALYEAR             = ITEM~FISCALYEAR
    INNER JOIN I_GLACCOUNTTEXT
            ON I_GLACCOUNTTEXT~GLACCOUNT = ITEM~GLACCOUNT
           AND I_GLACCOUNTTEXT~LANGUAGE  = 'E'
    LEFT JOIN  ZCORE_I_PROFILE_CUSTOMER AS CUSNAME
               ON CUSNAME~CUSTOMER = ACCOUNTPROFILE~ACCOUNT
              AND ITEM~FINANCIALACCOUNTTYPE = 'D'
    LEFT JOIN  ZCORE_I_PROFILE_SUPPLIER AS SUPNAME
               ON SUPNAME~SUPPLIER = ACCOUNTPROFILE~ACCOUNT
              AND ITEM~FINANCIALACCOUNTTYPE = 'K'
    LEFT  JOIN I_OPERATIONALACCTGDOCITEM AS OADI
            ON OADI~COMPANYCODE        = ITEM~COMPANYCODE
           AND OADI~ACCOUNTINGDOCUMENT = ITEM~ACCOUNTINGDOCUMENT
           AND OADI~FISCALYEAR         = ITEM~FISCALYEAR
           AND CAST( OADI~ACCOUNTINGDOCUMENTITEM AS CHAR( 3 ) ) = SUBSTRING( ITEM~LEDGERGLLINEITEM, 4, 3 )
    WHERE (
            (
                    @LV_INREV = 'Y'
                OR (
                         @LV_INREV = 'N'
                     AND JOURNAL~ISREVERSED IS INITIAL
                     AND JOURNAL~ISREVERSAL IS INITIAL
                   )
            )
            AND (
                        @LV_DOCTYPE                  = 'Y'
                  OR (
                        @LV_DOCTYPE                  = 'N'
                    AND JOURNAL~ACCOUNTINGDOCUMENTTYPE       <> 'CL'
                    AND JOURNAL~ACCOUNTINGDOCUMENTTYPE       <> 'SU'

                  )
                )
            AND (
                            @LV_FROMDATE                       <= ITEM~POSTINGDATE
                      AND   ITEM~POSTINGDATE     <= @LV_TODATE
                    )
            AND ITEM~FINANCIALACCOUNTTYPE IN @GR_KOART
            AND ITEM~LEDGER = '0L'
*            AND item~transactioncurrency IN @gr_waers
            AND ( (   ITEM~TRANSACTIONCURRENCY IN @GR_WAERS AND @LV_OPT = 'N' )
                 OR ( ITEM~TRANSACTIONCURRENCY IN @GR_WAERS AND @LV_OPT = 'I' )
                 OR ( ITEM~COMPANYCODECURRENCY IN @GR_WAERS AND @LV_OPT = 'T' )
                )
            AND ITEM~GLACCOUNT IN @GR_GLACCOUNT
            AND ACCOUNTPROFILE~ACCOUNT IN @GR_CUS_SUP
            AND ITEM~COMPANYCODE IN @GR_COMPANYCODE
            AND ITEM~FISCALYEAR  IN @GR_FISCALYEAR
*            AND ( ( item~financialaccounttype = 'D' AND cusname~CustomerBusinessPartnerGroup IN @gr_accountgroup ) OR
*                  ( item~financialaccounttype = 'K' AND supname~SupplierBusinessPartnerGroup IN @gr_accountgroup ) )
            AND ACCOUNTPROFILE~ACCOUNTBUSINESSPARTNERGROUP IN @GR_ACCOUNTGROUP
          )
    ORDER BY ACCOUNTPROFILE~ACCOUNT, JOURNAL~ACCOUNTINGDOCUMENT, ITEM~FINANCIALACCOUNTTYPE

    INTO TABLE @DATA(GT_DATA_PRE).
*    CHECK sy-subrc EQ 0.

    "-----------"option sum tài khoản--------------------------
    "tài khoản đối ứng
    SELECT *
    FROM ZFI_I_TKDOIUNG_GLACCOUNT
    FOR ALL ENTRIES IN @GT_DATA_PRE
    WHERE ACCOUNTINGDOCUMENT = @GT_DATA_PRE-ACCOUNTINGDOCUMENT
      AND COMPANYCODE        = @GT_DATA_PRE-COMPANYCODE
      AND FISCALYEAR         = @GT_DATA_PRE-FISCALYEAR
      AND LEDGERGLLINEITEM   = @GT_DATA_PRE-LEDGERGLLINEITEM
    ORDER BY PRIMARY KEY
    INTO TABLE @DATA(LT_TKDOIUNG).

    IF LV_SUMTK = 'Y'. "option sum tài khoản
      SELECT
      CUS_SUP,
      ACCOUNTINGDOCUMENT,
      FINANCIALACCOUNTTYPE,
      SUM( AMOUNT_FOREIGN_NO ) AS AMOUNT_FOREIGN_NO,
      SUM( AMOUNT_FOREIGN_CO ) AS AMOUNT_FOREIGN_CO,
      SUM( AMOUNT_LOCAL_NO )   AS AMOUNT_LOCAL_NO,
      SUM( AMOUNT_LOCAL_CO )   AS AMOUNT_LOCAL_CO
      FROM @GT_DATA_PRE AS DATA
      GROUP BY CUS_SUP, ACCOUNTINGDOCUMENT, FINANCIALACCOUNTTYPE
      ORDER BY CUS_SUP, ACCOUNTINGDOCUMENT, FINANCIALACCOUNTTYPE
      INTO TABLE @DATA(LT_DATASUM).

      SORT GT_DATA_PRE BY CUS_SUP ACCOUNTINGDOCUMENT FINANCIALACCOUNTTYPE.
      DELETE ADJACENT DUPLICATES FROM GT_DATA_PRE COMPARING CUS_SUP ACCOUNTINGDOCUMENT FINANCIALACCOUNTTYPE.

      LOOP AT GT_DATA_PRE REFERENCE INTO DATA(GS_DATA_PRE).
        READ TABLE LT_DATASUM INTO DATA(LS_DATASUM)
            WITH KEY CUS_SUP              = GS_DATA_PRE->CUS_SUP
                     ACCOUNTINGDOCUMENT   = GS_DATA_PRE->ACCOUNTINGDOCUMENT
                     FINANCIALACCOUNTTYPE = GS_DATA_PRE->FINANCIALACCOUNTTYPE
                     BINARY SEARCH.
        IF SY-SUBRC = 0.
          GS_DATA_PRE->AMOUNT_FOREIGN_NO = LS_DATASUM-AMOUNT_FOREIGN_NO.
          GS_DATA_PRE->AMOUNT_FOREIGN_CO = LS_DATASUM-AMOUNT_FOREIGN_CO.
          GS_DATA_PRE->AMOUNT_LOCAL_NO   = LS_DATASUM-AMOUNT_LOCAL_NO.
          GS_DATA_PRE->AMOUNT_LOCAL_CO   = LS_DATASUM-AMOUNT_LOCAL_CO.
        ENDIF.
      ENDLOOP.

      IF LT_TKDOIUNG IS NOT INITIAL.
        DATA: LW_TKDOI TYPE C LENGTH 100.
        DATA: LS_TKDOIUNG TYPE ZFI_I_TKDOIUNG_GLACCOUNT.

        DATA(LT_TKDOIUNGPRE) = LT_TKDOIUNG.
        SORT LT_TKDOIUNGPRE BY ACCOUNTINGDOCUMENT TKDOIUNG.
        DELETE ADJACENT DUPLICATES FROM LT_TKDOIUNGPRE COMPARING ACCOUNTINGDOCUMENT TKDOIUNG.

        CLEAR: LT_TKDOIUNG.

        LOOP AT LT_TKDOIUNGPRE INTO DATA(LS_TKDOIUNGPRE).
          IF LW_TKDOI IS INITIAL.
            LW_TKDOI = LS_TKDOIUNGPRE-TKDOIUNG.
          ELSE.
            LW_TKDOI = |{ LW_TKDOI }, { LS_TKDOIUNGPRE-TKDOIUNG }|.
          ENDIF.

          MOVE-CORRESPONDING LS_TKDOIUNGPRE TO LS_TKDOIUNG.
          AT END OF ACCOUNTINGDOCUMENT.
            LS_TKDOIUNG-TKDOIUNG = LW_TKDOI.
            APPEND LS_TKDOIUNG TO LT_TKDOIUNG.
            CLEAR: LS_TKDOIUNG, LW_TKDOI.
          ENDAT.
        ENDLOOP.
      ENDIF.
    ENDIF.
    SORT LT_TKDOIUNG BY ACCOUNTINGDOCUMENT COMPANYCODE FISCALYEAR LEDGERGLLINEITEM.



    "Xử lý tồn đầu kỳ
    DATA: LR_CUS_SUP  TYPE RANGE OF KUNNR,
          LS_DATA_PRE LIKE LINE OF GT_DATA_PRE.

    IF LV_OPT = 'N'.
      "Ngoại tệ
      SELECT
      ITEM~COMPANYCODE,
      ACCOUNTPROFILE~ACCOUNT,
      ITEM~FINANCIALACCOUNTTYPE,
      ITEM~COMPANYCODECURRENCY,
      ITEM~TRANSACTIONCURRENCY,
      SUM( ITEM~AMOUNTINTRANSACTIONCURRENCY ) AS SUMDUDAUKITRANSACTIONCURR,
      SUM( ITEM~AMOUNTINCOMPANYCODECURRENCY ) AS SUMDUDAUKICOMPANYCODECURR
      FROM I_JOURNALENTRYITEM AS ITEM
      LEFT JOIN ZCORE_I_PROFILE_FIDOC  AS ACCOUNTPROFILE
                 ON  ACCOUNTPROFILE~ACCOUNTINGDOCUMENT     = ITEM~ACCOUNTINGDOCUMENT
                 AND ACCOUNTPROFILE~ACCOUNTINGDOCUMENTITEM = ITEM~ACCOUNTINGDOCUMENTITEM
                 AND ACCOUNTPROFILE~COMPANYCODE            = ITEM~COMPANYCODE
                 AND ACCOUNTPROFILE~FISCALYEAR             = ITEM~FISCALYEAR
                 AND ACCOUNTPROFILE~FINANCIALACCOUNTTYPE   = ITEM~FINANCIALACCOUNTTYPE
                 AND (   ACCOUNTPROFILE~ACCOUNT = ITEM~CUSTOMER
                      OR ACCOUNTPROFILE~ACCOUNT = ITEM~SUPPLIER )
      WHERE ITEM~LEDGER = '0L'
        AND ITEM~SPECIALGLCODE IN ( '', 'A' )
        AND ITEM~FINANCIALACCOUNTTYPE IN @GR_KOART
        AND ITEM~TRANSACTIONCURRENCY IN @GR_WAERS
*        AND ( ( item~transactioncurrency IN @gr_waers AND @lv_opt = 'N' )
*            OR ( item~companycodecurrency IN @gr_waers AND @lv_opt = 'I' ) )
        AND ITEM~POSTINGDATE < @LV_FROMDATE
        AND ( ITEM~CLEARINGDATE IS INITIAL OR
            ITEM~CLEARINGDATE >= @LV_FROMDATE )
        AND (
                    @LV_INREV = 'Y'
                OR (
                         @LV_INREV = 'N'
                     AND ITEM~ISREVERSED IS INITIAL
                     AND ITEM~ISREVERSAL IS INITIAL
                   )
            )
            AND (
                        @LV_DOCTYPE                  = 'Y'
                  OR (
                        @LV_DOCTYPE                  = 'N'
                    AND ITEM~ACCOUNTINGDOCUMENTTYPE       <> 'CL'
                    AND ITEM~ACCOUNTINGDOCUMENTTYPE       <> 'SU'

                  )
            )
        AND ITEM~GLACCOUNT IN @GR_GLACCOUNT
        AND ACCOUNTPROFILE~ACCOUNT IN @GR_CUS_SUP
        AND ACCOUNTPROFILE~ACCOUNTBUSINESSPARTNERGROUP IN @GR_ACCOUNTGROUP
      GROUP BY ITEM~COMPANYCODE, ACCOUNTPROFILE~ACCOUNT, ITEM~FINANCIALACCOUNTTYPE, ITEM~COMPANYCODECURRENCY, ITEM~TRANSACTIONCURRENCY
      ORDER BY ITEM~COMPANYCODE, ACCOUNTPROFILE~ACCOUNT, ITEM~FINANCIALACCOUNTTYPE, ITEM~COMPANYCODECURRENCY, ITEM~TRANSACTIONCURRENCY
      INTO TABLE @DATA(LT_DAUKYNGOAITE).
      IF SY-SUBRC = 0.
        DELETE LT_DAUKYNGOAITE WHERE SUMDUDAUKITRANSACTIONCURR = 0 AND SUMDUDAUKICOMPANYCODECURR = 0.

        SELECT DISTINCT
        ADDACC~ACCOUNT,
        CASE WHEN ADDACC~FINANCIALACCOUNTTYPE = 'D'
             THEN CUSTOMER~CUSTOMERFULLNAME
             WHEN ADDACC~FINANCIALACCOUNTTYPE = 'K'
             THEN SUPPLIER~SUPPLIERFULLNAME
         END AS ACCOUNTNNAME
        FROM @LT_DAUKYNGOAITE AS ADDACC
        LEFT JOIN ZCORE_I_PROFILE_CUSTOMER AS CUSTOMER
               ON ADDACC~ACCOUNT = CUSTOMER~CUSTOMER
              AND ADDACC~FINANCIALACCOUNTTYPE = 'D'
        LEFT JOIN ZCORE_I_PROFILE_SUPPLIER AS SUPPLIER
               ON ADDACC~ACCOUNT = SUPPLIER~SUPPLIER
              AND ADDACC~FINANCIALACCOUNTTYPE = 'K'
        ORDER BY ADDACC~ACCOUNT
        INTO TABLE @DATA(LT_ACCOUNTNAME).


        LOOP AT LT_DAUKYNGOAITE INTO DATA(LS_ADDACCOUNTNGOAITE).
          READ TABLE GT_DATA_PRE INTO DATA(LS_DATA_CHECK)
            WITH KEY CUS_SUP              = LS_ADDACCOUNTNGOAITE-ACCOUNT
                     FINANCIALACCOUNTTYPE = LS_ADDACCOUNTNGOAITE-FINANCIALACCOUNTTYPE
                     BINARY SEARCH.
          IF SY-SUBRC <> 0.
            MOVE-CORRESPONDING LS_ADDACCOUNTNGOAITE TO LS_DATA_PRE.
            LS_DATA_PRE-CUS_SUP = LS_ADDACCOUNTNGOAITE-ACCOUNT.
            READ TABLE LT_ACCOUNTNAME INTO DATA(LS_ACCOUNTNAME)
              WITH KEY ACCOUNT = LS_ADDACCOUNTNGOAITE-ACCOUNT
                       BINARY SEARCH.
            IF SY-SUBRC = 0.
              LS_DATA_PRE-ACCOUNTTYPENAME = LS_ACCOUNTNAME-ACCOUNTNNAME.
            ENDIF.

            APPEND LS_DATA_PRE TO GT_DATA_PRE.
          ENDIF.
        ENDLOOP.
      ENDIF.

    ELSEIF LV_OPT = 'I' OR LV_OPT = 'T'.
      "Nội tệ
      SELECT
      ITEM~COMPANYCODE,
      ACCOUNTPROFILE~ACCOUNT,
      ITEM~FINANCIALACCOUNTTYPE,
      ITEM~COMPANYCODECURRENCY,
      SUM( ITEM~AMOUNTINCOMPANYCODECURRENCY ) AS SUMDUDAUKICOMPANYCODECURR
      FROM I_JOURNALENTRYITEM AS ITEM
      LEFT JOIN ZCORE_I_PROFILE_FIDOC  AS ACCOUNTPROFILE
                 ON  ACCOUNTPROFILE~ACCOUNTINGDOCUMENT     = ITEM~ACCOUNTINGDOCUMENT
                 AND ACCOUNTPROFILE~ACCOUNTINGDOCUMENTITEM = ITEM~ACCOUNTINGDOCUMENTITEM
                 AND ACCOUNTPROFILE~COMPANYCODE            = ITEM~COMPANYCODE
                 AND ACCOUNTPROFILE~FISCALYEAR             = ITEM~FISCALYEAR
                 AND ACCOUNTPROFILE~FINANCIALACCOUNTTYPE   = ITEM~FINANCIALACCOUNTTYPE
                 AND (   ACCOUNTPROFILE~ACCOUNT = ITEM~CUSTOMER
                      OR ACCOUNTPROFILE~ACCOUNT = ITEM~SUPPLIER )
      WHERE ITEM~LEDGER = '0L'
        AND ITEM~SPECIALGLCODE IN ( '', 'A' )
        AND ITEM~FINANCIALACCOUNTTYPE IN @GR_KOART
*        AND item~transactioncurrency IN @gr_waers
        AND ( (   ITEM~TRANSACTIONCURRENCY IN @GR_WAERS AND @LV_OPT = 'N' )
             OR ( ITEM~TRANSACTIONCURRENCY IN @GR_WAERS AND @LV_OPT = 'I' )
             OR ( ITEM~COMPANYCODECURRENCY IN @GR_WAERS AND @LV_OPT = 'T' )
            )
        AND ITEM~POSTINGDATE < @LV_FROMDATE
        AND ( ITEM~CLEARINGDATE IS INITIAL OR
            ITEM~CLEARINGDATE >= @LV_FROMDATE )
        AND (
                    @LV_INREV = 'Y'
                OR (
                         @LV_INREV = 'N'
                     AND ITEM~ISREVERSED IS INITIAL
                     AND ITEM~ISREVERSAL IS INITIAL
                   )
            )
            AND (
                        @LV_DOCTYPE                  = 'Y'
                  OR (
                        @LV_DOCTYPE                  = 'N'
                    AND ITEM~ACCOUNTINGDOCUMENTTYPE       <> 'CL'
                    AND ITEM~ACCOUNTINGDOCUMENTTYPE       <> 'SU'

                  )
            )
        AND ITEM~GLACCOUNT IN @GR_GLACCOUNT
        AND ACCOUNTPROFILE~ACCOUNT IN @GR_CUS_SUP
        AND ACCOUNTPROFILE~ACCOUNTBUSINESSPARTNERGROUP IN @GR_ACCOUNTGROUP
      GROUP BY ITEM~COMPANYCODE, ACCOUNTPROFILE~ACCOUNT, ITEM~FINANCIALACCOUNTTYPE, ITEM~COMPANYCODECURRENCY
      ORDER BY ITEM~COMPANYCODE, ACCOUNTPROFILE~ACCOUNT, ITEM~FINANCIALACCOUNTTYPE, ITEM~COMPANYCODECURRENCY
      INTO TABLE @DATA(LT_DAUKYNOITE).
      IF SY-SUBRC = 0.
        DELETE LT_DAUKYNOITE WHERE SUMDUDAUKICOMPANYCODECURR = 0.

        SELECT DISTINCT
        ADDACC~ACCOUNT,
        CASE WHEN ADDACC~FINANCIALACCOUNTTYPE = 'D'
             THEN CUSTOMER~CUSTOMERFULLNAME
             WHEN ADDACC~FINANCIALACCOUNTTYPE = 'K'
             THEN SUPPLIER~SUPPLIERFULLNAME
         END AS ACCOUNTNNAME
        FROM @LT_DAUKYNOITE AS ADDACC
        LEFT JOIN ZCORE_I_PROFILE_CUSTOMER AS CUSTOMER
               ON ADDACC~ACCOUNT = CUSTOMER~CUSTOMER
              AND ADDACC~FINANCIALACCOUNTTYPE = 'D'
        LEFT JOIN ZCORE_I_PROFILE_SUPPLIER AS SUPPLIER
               ON ADDACC~ACCOUNT = SUPPLIER~SUPPLIER
              AND ADDACC~FINANCIALACCOUNTTYPE = 'K'
        ORDER BY ADDACC~ACCOUNT
        INTO TABLE @LT_ACCOUNTNAME.


        LOOP AT LT_DAUKYNOITE INTO DATA(LS_ADDACCOUNTNOITE).
          READ TABLE GT_DATA_PRE INTO LS_DATA_CHECK
            WITH KEY CUS_SUP              = LS_ADDACCOUNTNGOAITE-ACCOUNT
                     FINANCIALACCOUNTTYPE = LS_ADDACCOUNTNGOAITE-FINANCIALACCOUNTTYPE
                     BINARY SEARCH.
          IF SY-SUBRC <> 0.
            MOVE-CORRESPONDING LS_ADDACCOUNTNOITE TO LS_DATA_PRE.
            LS_DATA_PRE-CUS_SUP = LS_ADDACCOUNTNOITE-ACCOUNT.

            READ TABLE LT_ACCOUNTNAME INTO LS_ACCOUNTNAME
                WITH KEY ACCOUNT = LS_ADDACCOUNTNOITE-ACCOUNT
                         BINARY SEARCH.
            IF SY-SUBRC = 0.
              LS_DATA_PRE-ACCOUNTTYPENAME = LS_ACCOUNTNAME-ACCOUNTNNAME.
            ENDIF.

            APPEND LS_DATA_PRE TO GT_DATA_PRE.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.

    DATA:
      "VND
      LW_SUBTOTAL_PHATSINH_NO_VND   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_PHATSINH_CO_VND   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_NO_VND      TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_CO_VND      TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_NO_VND     TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_CO_VND     TYPE ZDE_AMOUNT,

      LW_TOTAL_PHATSINH_NO_VND      TYPE ZDE_AMOUNT,
      LW_TOTAL_PHATSINH_CO_VND      TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_NO_VND         TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_CO_VND         TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_NO_VND        TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_CO_VND        TYPE ZDE_AMOUNT,

      "USD
      LW_SUBTOTAL_PHATSINH_NO_USD   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_PHATSINH_CO_USD   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_NO_USD      TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_CO_USD      TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_NO_USD     TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_CO_USD     TYPE ZDE_AMOUNT,

      LW_TOTAL_PHATSINH_NO_USD      TYPE ZDE_AMOUNT,
      LW_TOTAL_PHATSINH_CO_USD      TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_NO_USD         TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_CO_USD         TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_NO_USD        TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_CO_USD        TYPE ZDE_AMOUNT,

      "company code curr
      LW_SUBTOTAL_PHATSINH_NO_USD_C TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_PHATSINH_CO_USD_C TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_NO_USD_C    TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_CO_USD_C    TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_NO_USD_C   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_CO_USD_C   TYPE ZDE_AMOUNT,

      LW_TOTAL_PHATSINH_NO_USD_C    TYPE ZDE_AMOUNT,
      LW_TOTAL_PHATSINH_CO_USD_C    TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_NO_USD_C       TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_CO_USD_C       TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_NO_USD_C      TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_CO_USD_C      TYPE ZDE_AMOUNT,

      "EUR
      LW_SUBTOTAL_PHATSINH_NO_EUR   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_PHATSINH_CO_EUR   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_NO_EUR      TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_CO_EUR      TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_NO_EUR     TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_CO_EUR     TYPE ZDE_AMOUNT,

      LW_TOTAL_PHATSINH_NO_EUR      TYPE ZDE_AMOUNT,
      LW_TOTAL_PHATSINH_CO_EUR      TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_NO_EUR         TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_CO_EUR         TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_NO_EUR        TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_CO_EUR        TYPE ZDE_AMOUNT,

      "company code curr
      LW_SUBTOTAL_PHATSINH_NO_EUR_C TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_PHATSINH_CO_EUR_C TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_NO_EUR_C    TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_DAUKY_CO_EUR_C    TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_NO_EUR_C   TYPE ZDE_AMOUNT,
      LW_SUBTOTAL_CUOIKY_CO_EUR_C   TYPE ZDE_AMOUNT,

      LW_TOTAL_PHATSINH_NO_EUR_C    TYPE ZDE_AMOUNT,
      LW_TOTAL_PHATSINH_CO_EUR_C    TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_NO_EUR_C       TYPE ZDE_AMOUNT,
      LW_TOTAL_DAUKY_CO_EUR_C       TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_NO_EUR_C      TYPE ZDE_AMOUNT,
      LW_TOTAL_CUOIKY_CO_EUR_C      TYPE ZDE_AMOUNT.

    DATA: IS_LASTLINE   TYPE C LENGTH 1,
          IS_LASTCUSSUP TYPE C LENGTH 1.

    SORT GT_DATA_PRE BY CUS_SUP FINANCIALACCOUNTTYPE POSTINGDATE ACCOUNTINGDOCUMENT.

    LOOP AT GT_DATA_PRE ASSIGNING FIELD-SYMBOL(<LS_DATA_PRE>).
      CLEAR: IS_LASTLINE, IS_LASTCUSSUP.


      MOVE-CORRESPONDING <LS_DATA_PRE> TO GS_DATA.

      GS_DATA-AMOUNT_FOREIGN_CO *= -1.
      GS_DATA-AMOUNT_LOCAL_CO *= -1.

*      "============<<< Check Value Phát Sinh Nợ Ko Được bằng Value Phát Sinh Có  >>>=============
*      IF ( lv_opt = 'I' OR lv_opt = 'T' ) AND gs_data-isexistinperiod = 'X'.
*        IF gs_data-amount_local_co = gs_data-amount_local_no.
*          CONTINUE.
*        ENDIF.
*      ELSEIF lv_opt = 'N' AND gs_data-isexistinperiod = 'X'.
*        IF gs_data-amount_foreign_co = gs_data-amount_foreign_no.
*          CONTINUE.
*        ENDIF.
*      ENDIF.


      IF LV_SUMTK = 'Y'.
        READ TABLE   LT_TKDOIUNG INTO LS_TKDOIUNG
            WITH KEY ACCOUNTINGDOCUMENT = <LS_DATA_PRE>-ACCOUNTINGDOCUMENT
                     COMPANYCODE        = <LS_DATA_PRE>-COMPANYCODE
                     FISCALYEAR         = <LS_DATA_PRE>-FISCALYEAR
                     BINARY SEARCH.
        IF SY-SUBRC = 0.
          GS_DATA-TK_DOI_UNG =  LS_TKDOIUNG-TKDOIUNG.
        ENDIF.
      ELSE.
        READ TABLE   LT_TKDOIUNG INTO LS_TKDOIUNG
          WITH KEY ACCOUNTINGDOCUMENT = <LS_DATA_PRE>-ACCOUNTINGDOCUMENT
                   COMPANYCODE        = <LS_DATA_PRE>-COMPANYCODE
                   FISCALYEAR         = <LS_DATA_PRE>-FISCALYEAR
                   LEDGERGLLINEITEM   = <LS_DATA_PRE>-LEDGERGLLINEITEM
                   BINARY SEARCH.
        IF SY-SUBRC = 0.
          GS_DATA-TK_DOI_UNG =  LS_TKDOIUNG-TKDOIUNG.
        ENDIF.
      ENDIF.


*      gs_data-amount_foreign_co *= -1.
*      gs_data-amount_local_co *= -1.


      "items
      IF GS_DATA-ACCOUNTINGDOCUMENT IS NOT INITIAL. "check TH add account có tồn đầu kỳ mà ko phát sinh trong kỳ
        GS_DATA-ISLEVEL = '0'.
        APPEND GS_DATA TO GT_DATA.
      ENDIF.

      "-----------------sum---------------------------
      "-----------------Nội tệ chỉ có VND-------------
      "-----------------Ngoại tệ USD hoặc EUR---------
      IF LV_OPT = 'I' OR LV_OPT = 'T'.
        IF GS_DATA-COMPANYCODECURRENCY = 'VND'.
          "Transaction Curr
          LW_SUBTOTAL_PHATSINH_CO_VND  += GS_DATA-AMOUNT_LOCAL_CO.
          LW_SUBTOTAL_PHATSINH_NO_VND  += GS_DATA-AMOUNT_LOCAL_NO.

          LW_TOTAL_PHATSINH_CO_VND    += GS_DATA-AMOUNT_LOCAL_CO.
          LW_TOTAL_PHATSINH_NO_VND    += GS_DATA-AMOUNT_LOCAL_NO.
        ENDIF.
      ENDIF.

      IF LV_OPT = 'N'.
        IF GS_DATA-TRANSACTIONCURRENCY = 'USD'.
          "Transaction Curr
          LW_SUBTOTAL_PHATSINH_CO_USD  += GS_DATA-AMOUNT_FOREIGN_CO.
          LW_SUBTOTAL_PHATSINH_NO_USD  += GS_DATA-AMOUNT_FOREIGN_NO.

          LW_TOTAL_PHATSINH_CO_USD    += GS_DATA-AMOUNT_FOREIGN_CO.
          LW_TOTAL_PHATSINH_NO_USD    += GS_DATA-AMOUNT_FOREIGN_NO.

          "Company Code Curr
          LW_SUBTOTAL_PHATSINH_CO_USD_C  += GS_DATA-AMOUNT_LOCAL_CO.
          LW_SUBTOTAL_PHATSINH_NO_USD_C  += GS_DATA-AMOUNT_LOCAL_NO.

          LW_TOTAL_PHATSINH_CO_USD_C    += GS_DATA-AMOUNT_LOCAL_CO.
          LW_TOTAL_PHATSINH_NO_USD_C    += GS_DATA-AMOUNT_LOCAL_NO.
        ELSEIF GS_DATA-TRANSACTIONCURRENCY = 'EUR'.
          "Transaction Curr
          LW_SUBTOTAL_PHATSINH_CO_EUR  += GS_DATA-AMOUNT_FOREIGN_CO.
          LW_SUBTOTAL_PHATSINH_NO_EUR  += GS_DATA-AMOUNT_FOREIGN_NO.

          LW_TOTAL_PHATSINH_CO_EUR    += GS_DATA-AMOUNT_FOREIGN_CO.
          LW_TOTAL_PHATSINH_NO_EUR    += GS_DATA-AMOUNT_FOREIGN_NO.

          "Company Code Curr
          LW_SUBTOTAL_PHATSINH_CO_EUR_C  += GS_DATA-AMOUNT_LOCAL_CO.
          LW_SUBTOTAL_PHATSINH_NO_EUR_C  += GS_DATA-AMOUNT_LOCAL_NO.

          LW_TOTAL_PHATSINH_CO_EUR_C    += GS_DATA-AMOUNT_LOCAL_CO.
          LW_TOTAL_PHATSINH_NO_EUR_C    += GS_DATA-AMOUNT_LOCAL_NO.
        ENDIF.
      ENDIF.

      "Because using CONTINUE => AT LAST BEFORE AT END OF
      AT LAST.
        IS_LASTLINE = 'X'.
      ENDAT.


      AT END OF FINANCIALACCOUNTTYPE.
        "VND Tồn Đầu Kỳ
        READ TABLE LT_DAUKYNOITE INTO DATA(LS_DAUKYNOITE)
            WITH KEY COMPANYCODE          = GS_DATA-COMPANYCODE
                     ACCOUNT              = GS_DATA-CUS_SUP
                     FINANCIALACCOUNTTYPE = GS_DATA-FINANCIALACCOUNTTYPE
                     COMPANYCODECURRENCY  = 'VND'
                     BINARY SEARCH.
        IF SY-SUBRC = 0.
          IF LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR < 0.
            "credit transaction curr
            LW_SUBTOTAL_DAUKY_CO_VND = LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR * -1.
            LW_TOTAL_DAUKY_CO_VND   += LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR * -1.
          ELSEIF LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR >= 0.
            "debit company code curr
            LW_SUBTOTAL_DAUKY_NO_VND = LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR.
            LW_TOTAL_DAUKY_NO_VND    += LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR.
          ENDIF.
        ENDIF.

        "USD Tồn Đầu Kỳ
        READ TABLE LT_DAUKYNGOAITE INTO DATA(LS_DAUKYNGOAITE)
            WITH KEY COMPANYCODE          = GS_DATA-COMPANYCODE
                     ACCOUNT              = GS_DATA-CUS_SUP
                     FINANCIALACCOUNTTYPE = GS_DATA-FINANCIALACCOUNTTYPE
                     TRANSACTIONCURRENCY  = 'USD'
                     BINARY SEARCH.
        IF SY-SUBRC = 0.
          IF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR < 0.
            "credit transaction curr
            LW_SUBTOTAL_DAUKY_CO_USD = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.
            LW_TOTAL_DAUKY_CO_USD   += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.

            "credit company code curr
            LW_SUBTOTAL_DAUKY_CO_USD_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
            LW_TOTAL_DAUKY_CO_USD_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
          ELSEIF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR >= 0.
            "debit transaction curr
            LW_SUBTOTAL_DAUKY_NO_USD = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.
            LW_TOTAL_DAUKY_NO_USD  += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.

            "debit company code curr
            LW_SUBTOTAL_DAUKY_NO_USD_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR.
            LW_TOTAL_DAUKY_NO_USD_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR.
          ENDIF.
        ENDIF.

        "EUR Tồn Đầu Kỳ
        READ TABLE LT_DAUKYNGOAITE INTO LS_DAUKYNGOAITE
            WITH KEY COMPANYCODE          = GS_DATA-COMPANYCODE
                     ACCOUNT              = GS_DATA-CUS_SUP
                     FINANCIALACCOUNTTYPE = GS_DATA-FINANCIALACCOUNTTYPE
                     TRANSACTIONCURRENCY  = 'EUR'
                     BINARY SEARCH.
        IF SY-SUBRC = 0.
          IF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR < 0.
            "credit transaction curr
            LW_SUBTOTAL_DAUKY_CO_EUR = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.
            LW_TOTAL_DAUKY_CO_EUR   += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.

            "credit company code curr
            LW_SUBTOTAL_DAUKY_CO_EUR_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
            LW_TOTAL_DAUKY_CO_EUR_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
          ELSEIF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR >= 0.
            "debit transaction curr
            LW_SUBTOTAL_DAUKY_NO_EUR = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.
            LW_TOTAL_DAUKY_NO_EUR  += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.

            "debit company code curr
            LW_SUBTOTAL_DAUKY_NO_EUR_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR .
            LW_TOTAL_DAUKY_NO_EUR_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR .
          ENDIF.
        ENDIF.


        "VND Dư Cuối Kỳ
        IF ( LW_SUBTOTAL_DAUKY_NO_VND - LW_SUBTOTAL_DAUKY_CO_VND + LW_SUBTOTAL_PHATSINH_NO_VND - LW_SUBTOTAL_PHATSINH_CO_VND ) > 0.
          LW_SUBTOTAL_CUOIKY_NO_VND = LW_SUBTOTAL_DAUKY_NO_VND - LW_SUBTOTAL_DAUKY_CO_VND + LW_SUBTOTAL_PHATSINH_NO_VND - LW_SUBTOTAL_PHATSINH_CO_VND.
          LW_TOTAL_CUOIKY_NO_VND    += LW_SUBTOTAL_CUOIKY_NO_VND.
        ELSE.
          LW_SUBTOTAL_CUOIKY_CO_VND = ( LW_SUBTOTAL_DAUKY_NO_VND - LW_SUBTOTAL_DAUKY_CO_VND + LW_SUBTOTAL_PHATSINH_NO_VND - LW_SUBTOTAL_PHATSINH_CO_VND ) * -1.
          LW_TOTAL_CUOIKY_CO_VND    += LW_SUBTOTAL_CUOIKY_CO_VND.
        ENDIF.

        "USD Dư Cuối Kỳ
        IF ( LW_SUBTOTAL_DAUKY_NO_USD - LW_SUBTOTAL_DAUKY_CO_USD + LW_SUBTOTAL_PHATSINH_NO_USD - LW_SUBTOTAL_PHATSINH_CO_USD ) > 0.
          "transaction curr
          LW_SUBTOTAL_CUOIKY_NO_USD = LW_SUBTOTAL_DAUKY_NO_USD - LW_SUBTOTAL_DAUKY_CO_USD + LW_SUBTOTAL_PHATSINH_NO_USD - LW_SUBTOTAL_PHATSINH_CO_USD.
          LW_TOTAL_CUOIKY_NO_USD    += LW_SUBTOTAL_CUOIKY_NO_USD.

          "company code curr
          LW_SUBTOTAL_CUOIKY_NO_USD_C = LW_SUBTOTAL_DAUKY_NO_USD_C - LW_SUBTOTAL_DAUKY_CO_USD_C + LW_SUBTOTAL_PHATSINH_NO_USD_C - LW_SUBTOTAL_PHATSINH_CO_USD_C.
          LW_TOTAL_CUOIKY_NO_USD_C    += LW_SUBTOTAL_CUOIKY_NO_USD_C.
        ELSE.
          "transaction curr
          LW_SUBTOTAL_CUOIKY_CO_USD = ( LW_SUBTOTAL_DAUKY_NO_USD - LW_SUBTOTAL_DAUKY_CO_USD + LW_SUBTOTAL_PHATSINH_NO_USD - LW_SUBTOTAL_PHATSINH_CO_USD ) * -1.
          LW_TOTAL_CUOIKY_CO_USD    += LW_SUBTOTAL_CUOIKY_CO_USD.

          "company code curr
          LW_SUBTOTAL_CUOIKY_CO_USD_C = ( LW_SUBTOTAL_DAUKY_NO_USD_C - LW_SUBTOTAL_DAUKY_CO_USD_C + LW_SUBTOTAL_PHATSINH_NO_USD_C - LW_SUBTOTAL_PHATSINH_CO_USD_C ) * -1.
          LW_TOTAL_CUOIKY_CO_USD_C    += LW_SUBTOTAL_CUOIKY_CO_USD_C.
        ENDIF.

        "EUR Dư Cuối Kỳ
        IF ( LW_SUBTOTAL_DAUKY_NO_EUR - LW_SUBTOTAL_DAUKY_CO_EUR + LW_SUBTOTAL_PHATSINH_NO_EUR - LW_SUBTOTAL_PHATSINH_CO_EUR ) > 0.
          "transaction curr
          LW_SUBTOTAL_CUOIKY_NO_EUR = LW_SUBTOTAL_DAUKY_NO_EUR - LW_SUBTOTAL_DAUKY_CO_EUR + LW_SUBTOTAL_PHATSINH_NO_EUR - LW_SUBTOTAL_PHATSINH_CO_EUR.
          LW_TOTAL_CUOIKY_NO_EUR    += LW_SUBTOTAL_CUOIKY_NO_EUR.

          "company code curr
          LW_SUBTOTAL_CUOIKY_NO_EUR_C = LW_SUBTOTAL_DAUKY_NO_EUR_C - LW_SUBTOTAL_DAUKY_CO_EUR_C + LW_SUBTOTAL_PHATSINH_NO_EUR_C - LW_SUBTOTAL_PHATSINH_CO_EUR_C.
          LW_TOTAL_CUOIKY_NO_EUR_C    += LW_SUBTOTAL_CUOIKY_NO_EUR_C.
        ELSE.
          "transaction curr
          LW_SUBTOTAL_CUOIKY_CO_EUR = ( LW_SUBTOTAL_DAUKY_NO_EUR - LW_SUBTOTAL_DAUKY_CO_EUR + LW_SUBTOTAL_PHATSINH_NO_EUR - LW_SUBTOTAL_PHATSINH_CO_EUR ) * -1.
          LW_TOTAL_CUOIKY_CO_EUR    += LW_SUBTOTAL_CUOIKY_CO_EUR.

          "company code curr
          LW_SUBTOTAL_CUOIKY_CO_EUR_C = ( LW_SUBTOTAL_DAUKY_NO_EUR_C - LW_SUBTOTAL_DAUKY_CO_EUR_C + LW_SUBTOTAL_PHATSINH_NO_EUR_C - LW_SUBTOTAL_PHATSINH_CO_EUR_C ) * -1.
          LW_TOTAL_CUOIKY_CO_EUR_C    += LW_SUBTOTAL_CUOIKY_CO_EUR_C.
        ENDIF.


        "append data subtotal
*         clear: gs_data.
        GS_DATA-ISLEVEL = '1'.

        "VND
        GS_DATA-TONDAUKY_CO_VND = LW_SUBTOTAL_DAUKY_CO_VND.
        GS_DATA-TONDAUKY_NO_VND = LW_SUBTOTAL_DAUKY_NO_VND.
        GS_DATA-PHATSINH_CO_VND = LW_SUBTOTAL_PHATSINH_CO_VND.
        GS_DATA-PHATSINH_NO_VND = LW_SUBTOTAL_PHATSINH_NO_VND.
        GS_DATA-DUCUOIKY_CO_VND = LW_SUBTOTAL_CUOIKY_CO_VND.
        GS_DATA-DUCUOIKY_NO_VND = LW_SUBTOTAL_CUOIKY_NO_VND.

        "USD
        GS_DATA-TONDAUKY_CO_USD = LW_SUBTOTAL_DAUKY_CO_USD.
        GS_DATA-TONDAUKY_NO_USD = LW_SUBTOTAL_DAUKY_NO_USD.
        GS_DATA-PHATSINH_CO_USD = LW_SUBTOTAL_PHATSINH_CO_USD.
        GS_DATA-PHATSINH_NO_USD = LW_SUBTOTAL_PHATSINH_NO_USD.
        GS_DATA-DUCUOIKY_CO_USD = LW_SUBTOTAL_CUOIKY_CO_USD.
        GS_DATA-DUCUOIKY_NO_USD = LW_SUBTOTAL_CUOIKY_NO_USD.

        GS_DATA-TONDAUKY_CO_USD_COMPANYCODE = LW_SUBTOTAL_DAUKY_CO_USD_C.
        GS_DATA-TONDAUKY_NO_USD_COMPANYCODE = LW_SUBTOTAL_DAUKY_NO_USD_C.
        GS_DATA-PHATSINH_CO_USD_COMPANYCODE = LW_SUBTOTAL_PHATSINH_CO_USD_C.
        GS_DATA-PHATSINH_NO_USD_COMPANYCODE = LW_SUBTOTAL_PHATSINH_NO_USD_C.
        GS_DATA-DUCUOIKY_CO_USD_COMPANYCODE = LW_SUBTOTAL_CUOIKY_CO_USD_C.
        GS_DATA-DUCUOIKY_NO_USD_COMPANYCODE = LW_SUBTOTAL_CUOIKY_NO_USD_C.

        "EUR
        GS_DATA-TONDAUKY_CO_EUR = LW_SUBTOTAL_DAUKY_CO_EUR.
        GS_DATA-TONDAUKY_NO_EUR = LW_SUBTOTAL_DAUKY_NO_EUR.
        GS_DATA-PHATSINH_CO_EUR = LW_SUBTOTAL_PHATSINH_CO_EUR.
        GS_DATA-PHATSINH_NO_EUR = LW_SUBTOTAL_PHATSINH_NO_EUR.
        GS_DATA-DUCUOIKY_CO_EUR = LW_SUBTOTAL_CUOIKY_CO_EUR.
        GS_DATA-DUCUOIKY_NO_EUR = LW_SUBTOTAL_CUOIKY_NO_EUR.

        GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE = LW_SUBTOTAL_DAUKY_CO_EUR_C.
        GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE = LW_SUBTOTAL_DAUKY_NO_EUR_C.
        GS_DATA-PHATSINH_CO_EUR_COMPANYCODE = LW_SUBTOTAL_PHATSINH_CO_EUR_C.
        GS_DATA-PHATSINH_NO_EUR_COMPANYCODE = LW_SUBTOTAL_PHATSINH_NO_EUR_C.
        GS_DATA-DUCUOIKY_CO_EUR_COMPANYCODE = LW_SUBTOTAL_CUOIKY_CO_EUR_C.
        GS_DATA-DUCUOIKY_NO_EUR_COMPANYCODE = LW_SUBTOTAL_CUOIKY_NO_EUR_C.

        APPEND GS_DATA TO GT_DATA.

        "VND
        CLEAR:
          LW_SUBTOTAL_PHATSINH_NO_VND,
          LW_SUBTOTAL_PHATSINH_CO_VND,
          LW_SUBTOTAL_DAUKY_NO_VND   ,
          LW_SUBTOTAL_DAUKY_CO_VND   ,
          LW_SUBTOTAL_CUOIKY_NO_VND  ,
          LW_SUBTOTAL_CUOIKY_CO_VND  ,
          GS_DATA-TONDAUKY_CO_VND ,
          GS_DATA-TONDAUKY_NO_VND ,
          GS_DATA-PHATSINH_CO_VND ,
          GS_DATA-PHATSINH_NO_VND ,
          GS_DATA-DUCUOIKY_CO_VND ,
          GS_DATA-DUCUOIKY_NO_VND .

        "USD
        CLEAR:
          LW_SUBTOTAL_PHATSINH_NO_USD,
          LW_SUBTOTAL_PHATSINH_CO_USD,
          LW_SUBTOTAL_DAUKY_NO_USD   ,
          LW_SUBTOTAL_DAUKY_CO_USD   ,
          LW_SUBTOTAL_CUOIKY_NO_USD  ,
          LW_SUBTOTAL_CUOIKY_CO_USD  ,
          GS_DATA-TONDAUKY_CO_USD ,
          GS_DATA-TONDAUKY_NO_USD ,
          GS_DATA-PHATSINH_CO_USD ,
          GS_DATA-PHATSINH_NO_USD ,
          GS_DATA-DUCUOIKY_CO_USD ,
          GS_DATA-DUCUOIKY_NO_USD ,

          LW_SUBTOTAL_PHATSINH_NO_USD_C,
          LW_SUBTOTAL_PHATSINH_CO_USD_C,
          LW_SUBTOTAL_DAUKY_NO_USD_C   ,
          LW_SUBTOTAL_DAUKY_CO_USD_C   ,
          LW_SUBTOTAL_CUOIKY_NO_USD_C  ,
          LW_SUBTOTAL_CUOIKY_CO_USD_C  ,
          GS_DATA-TONDAUKY_CO_USD_COMPANYCODE ,
          GS_DATA-TONDAUKY_NO_USD_COMPANYCODE ,
          GS_DATA-PHATSINH_CO_USD_COMPANYCODE ,
          GS_DATA-PHATSINH_NO_USD_COMPANYCODE ,
          GS_DATA-DUCUOIKY_CO_USD_COMPANYCODE ,
          GS_DATA-DUCUOIKY_NO_USD_COMPANYCODE .

        "EUR
        CLEAR:
          LW_SUBTOTAL_PHATSINH_NO_EUR,
          LW_SUBTOTAL_PHATSINH_CO_EUR,
          LW_SUBTOTAL_DAUKY_NO_EUR   ,
          LW_SUBTOTAL_DAUKY_CO_EUR   ,
          LW_SUBTOTAL_CUOIKY_NO_EUR  ,
          LW_SUBTOTAL_CUOIKY_CO_EUR  ,
          GS_DATA-TONDAUKY_CO_EUR ,
          GS_DATA-TONDAUKY_NO_EUR ,
          GS_DATA-PHATSINH_CO_EUR ,
          GS_DATA-PHATSINH_NO_EUR ,
          GS_DATA-DUCUOIKY_CO_EUR ,
          GS_DATA-DUCUOIKY_NO_EUR ,

          LW_SUBTOTAL_PHATSINH_NO_EUR_C,
          LW_SUBTOTAL_PHATSINH_CO_EUR_C,
          LW_SUBTOTAL_DAUKY_NO_EUR_C   ,
          LW_SUBTOTAL_DAUKY_CO_EUR_C   ,
          LW_SUBTOTAL_CUOIKY_NO_EUR_C  ,
          LW_SUBTOTAL_CUOIKY_CO_EUR_C  ,
          GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE ,
          GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE ,
          GS_DATA-PHATSINH_CO_EUR_COMPANYCODE ,
          GS_DATA-PHATSINH_NO_EUR_COMPANYCODE ,
          GS_DATA-DUCUOIKY_CO_EUR_COMPANYCODE ,
          GS_DATA-DUCUOIKY_NO_EUR_COMPANYCODE .

        IF IS_LASTLINE <> 'X'.
          CONTINUE.
        ELSE.
          IS_LASTCUSSUP = 'X'.
        ENDIF.
      ENDAT.

      AT END OF CUS_SUP.
        IF IS_LASTCUSSUP <> 'X'.
          "VND Tồn Đầu Kỳ
          READ TABLE LT_DAUKYNOITE INTO LS_DAUKYNOITE
              WITH KEY COMPANYCODE          = GS_DATA-COMPANYCODE
                       ACCOUNT              = GS_DATA-CUS_SUP
                       FINANCIALACCOUNTTYPE = GS_DATA-FINANCIALACCOUNTTYPE
                       COMPANYCODECURRENCY  = 'VND'
                       BINARY SEARCH.
          IF SY-SUBRC = 0.
            IF LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR < 0.
              "credit transaction curr
              LW_SUBTOTAL_DAUKY_CO_VND = LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR * -1.
              LW_TOTAL_DAUKY_CO_VND   += LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR * -1.
            ELSEIF LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR > 0.
              "debit company code curr
              LW_SUBTOTAL_DAUKY_NO_VND = LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR.
              LW_TOTAL_DAUKY_NO_VND    += LS_DAUKYNOITE-SUMDUDAUKICOMPANYCODECURR.
            ENDIF.
          ENDIF.

          "USD Tồn Đầu Kỳ
          READ TABLE LT_DAUKYNGOAITE INTO LS_DAUKYNGOAITE
              WITH KEY COMPANYCODE          = GS_DATA-COMPANYCODE
                       ACCOUNT              = GS_DATA-CUS_SUP
                       FINANCIALACCOUNTTYPE = GS_DATA-FINANCIALACCOUNTTYPE
                       TRANSACTIONCURRENCY  = 'USD'
                       BINARY SEARCH.
          IF SY-SUBRC = 0.
            IF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR < 0.
              "credit transaction curr
              LW_SUBTOTAL_DAUKY_CO_USD = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.
              LW_TOTAL_DAUKY_CO_USD   += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.

              "credit company code curr
              LW_SUBTOTAL_DAUKY_CO_USD_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
              LW_TOTAL_DAUKY_CO_USD_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
            ELSEIF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR > 0.
              "debit transaction curr
              LW_SUBTOTAL_DAUKY_NO_USD = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.
              LW_TOTAL_DAUKY_NO_USD  += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.

              "debit company code curr
              LW_SUBTOTAL_DAUKY_NO_USD_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR.
              LW_TOTAL_DAUKY_NO_USD_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR.
            ENDIF.
          ENDIF.

          "EUR Tồn Đầu Kỳ
          READ TABLE LT_DAUKYNGOAITE INTO LS_DAUKYNGOAITE
              WITH KEY COMPANYCODE          = GS_DATA-COMPANYCODE
                       ACCOUNT              = GS_DATA-CUS_SUP
                       FINANCIALACCOUNTTYPE = GS_DATA-FINANCIALACCOUNTTYPE
                       TRANSACTIONCURRENCY  = 'EUR'
                       BINARY SEARCH.
          IF SY-SUBRC = 0.
            IF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR < 0.
              "credit transaction curr
              LW_SUBTOTAL_DAUKY_CO_EUR = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.
              LW_TOTAL_DAUKY_CO_EUR   += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR * -1.

              "credit company code curr
              LW_SUBTOTAL_DAUKY_CO_EUR_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
              LW_TOTAL_DAUKY_CO_EUR_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR * -1.
            ELSEIF LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR > 0.
              "debit transaction curr
              LW_SUBTOTAL_DAUKY_NO_EUR = LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.
              LW_TOTAL_DAUKY_NO_EUR  += LS_DAUKYNGOAITE-SUMDUDAUKITRANSACTIONCURR.

              "debit company code curr
              LW_SUBTOTAL_DAUKY_NO_EUR_C = LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR .
              LW_TOTAL_DAUKY_NO_EUR_C   += LS_DAUKYNGOAITE-SUMDUDAUKICOMPANYCODECURR .
            ENDIF.
          ENDIF.


          "VND Dư Cuối Kỳ
          IF ( LW_SUBTOTAL_DAUKY_NO_VND - LW_SUBTOTAL_DAUKY_CO_VND + LW_SUBTOTAL_PHATSINH_NO_VND - LW_SUBTOTAL_PHATSINH_CO_VND ) > 0.
            LW_SUBTOTAL_CUOIKY_NO_VND = LW_SUBTOTAL_DAUKY_NO_VND - LW_SUBTOTAL_DAUKY_CO_VND + LW_SUBTOTAL_PHATSINH_NO_VND - LW_SUBTOTAL_PHATSINH_CO_VND.
          ELSE.
            LW_SUBTOTAL_CUOIKY_CO_VND = ( LW_SUBTOTAL_DAUKY_NO_VND - LW_SUBTOTAL_DAUKY_CO_VND + LW_SUBTOTAL_PHATSINH_NO_VND - LW_SUBTOTAL_PHATSINH_CO_VND ) * -1.
          ENDIF.

          "USD Dư Cuối Kỳ
          IF ( LW_SUBTOTAL_DAUKY_NO_USD - LW_SUBTOTAL_DAUKY_CO_USD + LW_SUBTOTAL_PHATSINH_NO_USD - LW_SUBTOTAL_PHATSINH_CO_USD ) > 0.
            "transaction curr
            LW_SUBTOTAL_CUOIKY_NO_USD = LW_SUBTOTAL_DAUKY_NO_USD - LW_SUBTOTAL_DAUKY_CO_USD + LW_SUBTOTAL_PHATSINH_NO_USD - LW_SUBTOTAL_PHATSINH_CO_USD.

            "company code curr
            LW_SUBTOTAL_CUOIKY_NO_USD_C = LW_SUBTOTAL_DAUKY_NO_USD_C - LW_SUBTOTAL_DAUKY_CO_USD_C + LW_SUBTOTAL_PHATSINH_NO_USD_C - LW_SUBTOTAL_PHATSINH_CO_USD_C.
          ELSE.
            "transaction curr
            LW_SUBTOTAL_CUOIKY_CO_USD = ( LW_SUBTOTAL_DAUKY_NO_USD - LW_SUBTOTAL_DAUKY_CO_USD + LW_SUBTOTAL_PHATSINH_NO_USD - LW_SUBTOTAL_PHATSINH_CO_USD ) * -1.

            "company code curr
            LW_SUBTOTAL_CUOIKY_CO_USD_C = ( LW_SUBTOTAL_DAUKY_NO_USD_C - LW_SUBTOTAL_DAUKY_CO_USD_C + LW_SUBTOTAL_PHATSINH_NO_USD_C - LW_SUBTOTAL_PHATSINH_CO_USD_C ) * -1.
          ENDIF.

          "EUR Dư Cuối Kỳ
          IF ( LW_SUBTOTAL_DAUKY_NO_EUR - LW_SUBTOTAL_DAUKY_CO_EUR + LW_SUBTOTAL_PHATSINH_NO_EUR - LW_SUBTOTAL_PHATSINH_CO_EUR ) > 0.
            "transaction curr
            LW_SUBTOTAL_CUOIKY_NO_EUR = LW_SUBTOTAL_DAUKY_NO_EUR - LW_SUBTOTAL_DAUKY_CO_EUR + LW_SUBTOTAL_PHATSINH_NO_EUR - LW_SUBTOTAL_PHATSINH_CO_EUR.

            "company code curr
            LW_SUBTOTAL_CUOIKY_NO_EUR_C = LW_SUBTOTAL_DAUKY_NO_EUR_C - LW_SUBTOTAL_DAUKY_CO_EUR_C + LW_SUBTOTAL_PHATSINH_NO_EUR_C - LW_SUBTOTAL_PHATSINH_CO_EUR_C.
          ELSE.
            "transaction curr
            LW_SUBTOTAL_CUOIKY_CO_EUR = ( LW_SUBTOTAL_DAUKY_NO_EUR - LW_SUBTOTAL_DAUKY_CO_EUR + LW_SUBTOTAL_PHATSINH_NO_EUR - LW_SUBTOTAL_PHATSINH_CO_EUR ) * -1.

            "company code curr
            LW_SUBTOTAL_CUOIKY_CO_EUR_C = ( LW_SUBTOTAL_DAUKY_NO_EUR_C - LW_SUBTOTAL_DAUKY_CO_EUR_C + LW_SUBTOTAL_PHATSINH_NO_EUR_C - LW_SUBTOTAL_PHATSINH_CO_EUR_C ) * -1.
          ENDIF.


          "append data subtotal
*         clear: gs_data.
          GS_DATA-ISLEVEL = '1'.

          "VND
          GS_DATA-TONDAUKY_CO_VND = LW_SUBTOTAL_DAUKY_CO_VND.
          GS_DATA-TONDAUKY_NO_VND = LW_SUBTOTAL_DAUKY_NO_VND.
          GS_DATA-PHATSINH_CO_VND = LW_SUBTOTAL_PHATSINH_CO_VND.
          GS_DATA-PHATSINH_NO_VND = LW_SUBTOTAL_PHATSINH_NO_VND.
          GS_DATA-DUCUOIKY_CO_VND = LW_SUBTOTAL_CUOIKY_CO_VND.
          GS_DATA-DUCUOIKY_NO_VND = LW_SUBTOTAL_CUOIKY_NO_VND.

          "USD
          GS_DATA-TONDAUKY_CO_USD = LW_SUBTOTAL_DAUKY_CO_USD.
          GS_DATA-TONDAUKY_NO_USD = LW_SUBTOTAL_DAUKY_NO_USD.
          GS_DATA-PHATSINH_CO_USD = LW_SUBTOTAL_PHATSINH_CO_USD.
          GS_DATA-PHATSINH_NO_USD = LW_SUBTOTAL_PHATSINH_NO_USD.
          GS_DATA-DUCUOIKY_CO_USD = LW_SUBTOTAL_CUOIKY_CO_USD.
          GS_DATA-DUCUOIKY_NO_USD = LW_SUBTOTAL_CUOIKY_NO_USD.

          GS_DATA-TONDAUKY_CO_USD_COMPANYCODE = LW_SUBTOTAL_DAUKY_CO_USD_C.
          GS_DATA-TONDAUKY_NO_USD_COMPANYCODE = LW_SUBTOTAL_DAUKY_NO_USD_C.
          GS_DATA-PHATSINH_CO_USD_COMPANYCODE = LW_SUBTOTAL_PHATSINH_CO_USD_C.
          GS_DATA-PHATSINH_NO_USD_COMPANYCODE = LW_SUBTOTAL_PHATSINH_NO_USD_C.
          GS_DATA-DUCUOIKY_CO_USD_COMPANYCODE = LW_SUBTOTAL_CUOIKY_CO_USD_C.
          GS_DATA-DUCUOIKY_NO_USD_COMPANYCODE = LW_SUBTOTAL_CUOIKY_NO_USD_C.

          "EUR
          GS_DATA-TONDAUKY_CO_EUR = LW_SUBTOTAL_DAUKY_CO_EUR.
          GS_DATA-TONDAUKY_NO_EUR = LW_SUBTOTAL_DAUKY_NO_EUR.
          GS_DATA-PHATSINH_CO_EUR = LW_SUBTOTAL_PHATSINH_CO_EUR.
          GS_DATA-PHATSINH_NO_EUR = LW_SUBTOTAL_PHATSINH_NO_EUR.
          GS_DATA-DUCUOIKY_CO_EUR = LW_SUBTOTAL_CUOIKY_CO_EUR.
          GS_DATA-DUCUOIKY_NO_EUR = LW_SUBTOTAL_CUOIKY_NO_EUR.

          GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE = LW_SUBTOTAL_DAUKY_CO_EUR_C.
          GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE = LW_SUBTOTAL_DAUKY_NO_EUR_C.
          GS_DATA-PHATSINH_CO_EUR_COMPANYCODE = LW_SUBTOTAL_PHATSINH_CO_EUR_C.
          GS_DATA-PHATSINH_NO_EUR_COMPANYCODE = LW_SUBTOTAL_PHATSINH_NO_EUR_C.
          GS_DATA-DUCUOIKY_CO_EUR_COMPANYCODE = LW_SUBTOTAL_CUOIKY_CO_EUR_C.
          GS_DATA-DUCUOIKY_NO_EUR_COMPANYCODE = LW_SUBTOTAL_CUOIKY_NO_EUR_C.

          APPEND GS_DATA TO GT_DATA.

          "VND
          CLEAR:
            LW_SUBTOTAL_PHATSINH_NO_VND,
            LW_SUBTOTAL_PHATSINH_CO_VND,
            LW_SUBTOTAL_DAUKY_NO_VND   ,
            LW_SUBTOTAL_DAUKY_CO_VND   ,
            LW_SUBTOTAL_CUOIKY_NO_VND  ,
            LW_SUBTOTAL_CUOIKY_CO_VND  ,
            GS_DATA-TONDAUKY_CO_VND ,
            GS_DATA-TONDAUKY_NO_VND ,
            GS_DATA-PHATSINH_CO_VND ,
            GS_DATA-PHATSINH_NO_VND ,
            GS_DATA-DUCUOIKY_CO_VND ,
            GS_DATA-DUCUOIKY_NO_VND .

          "USD
          CLEAR:
            LW_SUBTOTAL_PHATSINH_NO_USD,
            LW_SUBTOTAL_PHATSINH_CO_USD,
            LW_SUBTOTAL_DAUKY_NO_USD   ,
            LW_SUBTOTAL_DAUKY_CO_USD   ,
            LW_SUBTOTAL_CUOIKY_NO_USD  ,
            LW_SUBTOTAL_CUOIKY_CO_USD  ,
            GS_DATA-TONDAUKY_CO_USD ,
            GS_DATA-TONDAUKY_NO_USD ,
            GS_DATA-PHATSINH_CO_USD ,
            GS_DATA-PHATSINH_NO_USD ,
            GS_DATA-DUCUOIKY_CO_USD ,
            GS_DATA-DUCUOIKY_NO_USD ,

            LW_SUBTOTAL_PHATSINH_NO_USD_C,
            LW_SUBTOTAL_PHATSINH_CO_USD_C,
            LW_SUBTOTAL_DAUKY_NO_USD_C   ,
            LW_SUBTOTAL_DAUKY_CO_USD_C   ,
            LW_SUBTOTAL_CUOIKY_NO_USD_C  ,
            LW_SUBTOTAL_CUOIKY_CO_USD_C  ,
            GS_DATA-TONDAUKY_CO_USD_COMPANYCODE ,
            GS_DATA-TONDAUKY_NO_USD_COMPANYCODE ,
            GS_DATA-PHATSINH_CO_USD_COMPANYCODE ,
            GS_DATA-PHATSINH_NO_USD_COMPANYCODE ,
            GS_DATA-DUCUOIKY_CO_USD_COMPANYCODE ,
            GS_DATA-DUCUOIKY_NO_USD_COMPANYCODE .

          "EUR
          CLEAR:
            LW_SUBTOTAL_PHATSINH_NO_EUR,
            LW_SUBTOTAL_PHATSINH_CO_EUR,
            LW_SUBTOTAL_DAUKY_NO_EUR   ,
            LW_SUBTOTAL_DAUKY_CO_EUR   ,
            LW_SUBTOTAL_CUOIKY_NO_EUR  ,
            LW_SUBTOTAL_CUOIKY_CO_EUR  ,
            GS_DATA-TONDAUKY_CO_EUR ,
            GS_DATA-TONDAUKY_NO_EUR ,
            GS_DATA-PHATSINH_CO_EUR ,
            GS_DATA-PHATSINH_NO_EUR ,
            GS_DATA-DUCUOIKY_CO_EUR ,
            GS_DATA-DUCUOIKY_NO_EUR ,

            LW_SUBTOTAL_PHATSINH_NO_EUR_C,
            LW_SUBTOTAL_PHATSINH_CO_EUR_C,
            LW_SUBTOTAL_DAUKY_NO_EUR_C   ,
            LW_SUBTOTAL_DAUKY_CO_EUR_C   ,
            LW_SUBTOTAL_CUOIKY_NO_EUR_C  ,
            LW_SUBTOTAL_CUOIKY_CO_EUR_C  ,
            GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE ,
            GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE ,
            GS_DATA-PHATSINH_CO_EUR_COMPANYCODE ,
            GS_DATA-PHATSINH_NO_EUR_COMPANYCODE ,
            GS_DATA-DUCUOIKY_CO_EUR_COMPANYCODE ,
            GS_DATA-DUCUOIKY_NO_EUR_COMPANYCODE .

          IF IS_LASTLINE <> 'X'.
            CONTINUE.
          ENDIF.
        ENDIF.
      ENDAT.

      "Because using CONTINUE => AT LAST BEFORE AT END OF
      AT LAST.
        "append data total
*        CLEAR: gs_data.
        GS_DATA-ISLEVEL = '2'.
        GS_DATA-ACCOUNTTYPENAME = <LS_DATA_PRE>-ACCOUNTTYPENAME.
*         gs_data-fromdate        = lv_fromdate.
*         gs_data-todate          = lv_todate.


        "VND
        "----Tồn đầu kỳ
        IF ( LW_TOTAL_DAUKY_NO_VND - LW_TOTAL_DAUKY_CO_VND ) < 0.
          GS_DATA-TONDAUKY_CO_VND = ( LW_TOTAL_DAUKY_NO_VND - LW_TOTAL_DAUKY_CO_VND ) * -1.
        ELSE.
          GS_DATA-TONDAUKY_NO_VND = LW_TOTAL_DAUKY_NO_VND - LW_TOTAL_DAUKY_CO_VND.
        ENDIF.
        GS_DATA-PHATSINH_CO_VND = LW_TOTAL_PHATSINH_CO_VND.
        GS_DATA-PHATSINH_NO_VND = LW_TOTAL_PHATSINH_NO_VND.
        "----Dư Cuối kỳ
        IF ( GS_DATA-TONDAUKY_NO_VND - GS_DATA-TONDAUKY_CO_VND + GS_DATA-PHATSINH_NO_VND - GS_DATA-PHATSINH_CO_VND ) < 0.
          GS_DATA-DUCUOIKY_CO_VND = ( GS_DATA-TONDAUKY_NO_VND - GS_DATA-TONDAUKY_CO_VND + GS_DATA-PHATSINH_NO_VND - GS_DATA-PHATSINH_CO_VND ) * -1.
        ELSE.
          GS_DATA-DUCUOIKY_NO_VND = GS_DATA-TONDAUKY_NO_VND - GS_DATA-TONDAUKY_CO_VND + GS_DATA-PHATSINH_NO_VND - GS_DATA-PHATSINH_CO_VND.
        ENDIF.


        "USD
        "----Tồn đầu kỳ
        IF ( LW_TOTAL_DAUKY_NO_USD - LW_TOTAL_DAUKY_CO_USD ) < 0.
          GS_DATA-TONDAUKY_CO_USD = ( LW_TOTAL_DAUKY_NO_USD - LW_TOTAL_DAUKY_CO_USD ) * -1.
        ELSE.
          GS_DATA-TONDAUKY_NO_USD = LW_TOTAL_DAUKY_NO_USD - LW_TOTAL_DAUKY_CO_USD.
        ENDIF.
        GS_DATA-PHATSINH_CO_USD = LW_TOTAL_PHATSINH_CO_USD.
        GS_DATA-PHATSINH_NO_USD = LW_TOTAL_PHATSINH_NO_USD.
        "----Dư Cuối kỳ
        IF ( GS_DATA-TONDAUKY_NO_USD - GS_DATA-TONDAUKY_CO_USD + GS_DATA-PHATSINH_NO_USD - GS_DATA-PHATSINH_CO_USD ) < 0.
          GS_DATA-DUCUOIKY_CO_USD = ( GS_DATA-TONDAUKY_NO_USD - GS_DATA-TONDAUKY_CO_USD + GS_DATA-PHATSINH_NO_USD - GS_DATA-PHATSINH_CO_USD ) * -1.
        ELSE.
          GS_DATA-DUCUOIKY_NO_USD = GS_DATA-TONDAUKY_NO_USD - GS_DATA-TONDAUKY_CO_USD + GS_DATA-PHATSINH_NO_USD - GS_DATA-PHATSINH_CO_USD.
        ENDIF.

        "----Tồn đầu kỳ--companycode
        IF ( LW_TOTAL_DAUKY_NO_USD_C - LW_TOTAL_DAUKY_CO_USD_C ) < 0.
          GS_DATA-TONDAUKY_CO_USD_COMPANYCODE = ( LW_TOTAL_DAUKY_NO_USD_C - LW_TOTAL_DAUKY_CO_USD_C ) * -1.
        ELSE.
          GS_DATA-TONDAUKY_NO_USD_COMPANYCODE = LW_TOTAL_DAUKY_NO_USD_C - LW_TOTAL_DAUKY_CO_USD_C.
        ENDIF.
        GS_DATA-PHATSINH_CO_USD_COMPANYCODE = LW_TOTAL_PHATSINH_CO_USD_C.
        GS_DATA-PHATSINH_NO_USD_COMPANYCODE = LW_TOTAL_PHATSINH_NO_USD_C.
        "----Dư Cuối kỳ--companycode
        IF ( GS_DATA-TONDAUKY_NO_USD_COMPANYCODE - GS_DATA-TONDAUKY_CO_USD_COMPANYCODE + GS_DATA-PHATSINH_NO_USD_COMPANYCODE - GS_DATA-PHATSINH_CO_USD_COMPANYCODE ) < 0.
          GS_DATA-DUCUOIKY_CO_USD_COMPANYCODE = ( GS_DATA-TONDAUKY_NO_USD_COMPANYCODE - GS_DATA-TONDAUKY_CO_USD_COMPANYCODE + GS_DATA-PHATSINH_NO_USD_COMPANYCODE - GS_DATA-PHATSINH_CO_USD_COMPANYCODE ) * -1.
        ELSE.
          GS_DATA-DUCUOIKY_NO_USD_COMPANYCODE = GS_DATA-TONDAUKY_NO_USD_COMPANYCODE - GS_DATA-TONDAUKY_CO_USD_COMPANYCODE + GS_DATA-PHATSINH_NO_USD_COMPANYCODE - GS_DATA-PHATSINH_CO_USD_COMPANYCODE.
        ENDIF.

        "EUR
        "----Tồn đầu kỳ
        IF ( LW_TOTAL_DAUKY_NO_EUR - LW_TOTAL_DAUKY_CO_EUR ) < 0.
          GS_DATA-TONDAUKY_CO_EUR = ( LW_TOTAL_DAUKY_NO_EUR - LW_TOTAL_DAUKY_CO_EUR ) * -1.
        ELSE.
          GS_DATA-TONDAUKY_NO_EUR = LW_TOTAL_DAUKY_NO_EUR - LW_TOTAL_DAUKY_CO_EUR.
        ENDIF.
        GS_DATA-PHATSINH_CO_EUR = LW_TOTAL_PHATSINH_CO_EUR.
        GS_DATA-PHATSINH_NO_EUR = LW_TOTAL_PHATSINH_NO_EUR.
        "----Dư Cuối kỳ
        IF ( GS_DATA-TONDAUKY_NO_EUR - GS_DATA-TONDAUKY_CO_EUR + GS_DATA-PHATSINH_NO_EUR - GS_DATA-PHATSINH_CO_EUR ) < 0.
          GS_DATA-DUCUOIKY_CO_EUR = ( GS_DATA-TONDAUKY_NO_EUR - GS_DATA-TONDAUKY_CO_EUR + GS_DATA-PHATSINH_NO_EUR - GS_DATA-PHATSINH_CO_EUR ) * -1.
        ELSE.
          GS_DATA-DUCUOIKY_NO_EUR = GS_DATA-TONDAUKY_NO_EUR - GS_DATA-TONDAUKY_CO_EUR + GS_DATA-PHATSINH_NO_EUR - GS_DATA-PHATSINH_CO_EUR.
        ENDIF.


        "----Tồn đầu kỳ--companycode
        IF ( LW_TOTAL_DAUKY_NO_EUR_C - LW_TOTAL_DAUKY_CO_EUR_C ) < 0.
          GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE = ( LW_TOTAL_DAUKY_NO_EUR_C - LW_TOTAL_DAUKY_CO_EUR_C ) * -1.
        ELSE.
          GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE = LW_TOTAL_DAUKY_NO_EUR_C - LW_TOTAL_DAUKY_CO_EUR_C.
        ENDIF.
        GS_DATA-PHATSINH_CO_EUR_COMPANYCODE = LW_TOTAL_PHATSINH_CO_EUR_C.
        GS_DATA-PHATSINH_NO_EUR_COMPANYCODE = LW_TOTAL_PHATSINH_NO_EUR_C.
        "----Dư Cuối kỳ--companycode
        IF ( GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE - GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE + GS_DATA-PHATSINH_NO_EUR_COMPANYCODE - GS_DATA-PHATSINH_CO_EUR_COMPANYCODE ) < 0.
          GS_DATA-DUCUOIKY_CO_EUR_COMPANYCODE = ( GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE - GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE + GS_DATA-PHATSINH_NO_EUR_COMPANYCODE - GS_DATA-PHATSINH_CO_EUR_COMPANYCODE ) * -1.
        ELSE.
          GS_DATA-DUCUOIKY_NO_EUR_COMPANYCODE = GS_DATA-TONDAUKY_NO_EUR_COMPANYCODE - GS_DATA-TONDAUKY_CO_EUR_COMPANYCODE + GS_DATA-PHATSINH_NO_EUR_COMPANYCODE - GS_DATA-PHATSINH_CO_EUR_COMPANYCODE.
        ENDIF.

*        gs_data-ducuoiky_co_eur_companycode = lw_total_cuoiky_co_eur_c.
*        gs_data-ducuoiky_no_eur_companycode = lw_total_cuoiky_no_eur_c.

        APPEND GS_DATA TO GT_DATA.
      ENDAT.

    ENDLOOP.


  ENDMETHOD.